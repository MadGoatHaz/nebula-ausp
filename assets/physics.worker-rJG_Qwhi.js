(function(){"use strict";console.log("[physics.worker] Script loaded and executing.");let t,h,x,w=0,l=0;const c=6;let v=6.674,g=4e5,E="simple",P=0;const k=5e4,B=25;function L(i){for(let n=2;n<l;n++){const s=n*3,e=n*c,f=t[e];if(f>99998)continue;const p=t[e+1],r=t[e+2],_=-f,u=-p,d=-r,M=_*_+u*u+d*d;if(M<1e4){t[e]=99999,P++;continue}const o=v*g/M,y=1/Math.sqrt(M);let S=_*y*o,a=u*y*o,m=d*y*o;const A=t[c],I=t[c+1],q=t[c+2],z=A-f,b=I-p,F=q-r,D=z*z+b*b+F*F;if(D>100){const C=v*k/D,R=1/Math.sqrt(D);S+=z*R*C,a+=b*R*C,m+=F*R*C}h[s]=S,h[s+1]=a,h[s+2]=m}}function N(i,n){for(let s=2;s<l;s++){const e=s*3,f=s*c;let p=0,r=0,_=0;const u=t[f];if(u>99998)continue;const d=t[f+1],M=t[f+2];for(let o=0;o<l;o++){if(s===o)continue;const y=t[o*c];if(y>99998)continue;const S=t[o*c+1],a=t[o*c+2],m=y-u,A=S-d,I=a-M;let q=m*m+A*A+I*I;if(n&&s>1&&o>1&&q<B){t[o*c]=99999,P++;continue}if(q<400){o===0&&(t[f]=99999,P++);continue}const z=v*x[o]/q,b=1/Math.sqrt(q);p+=m*b*z,r+=A*b*z,_+=I*b*z}h[e]=p,h[e+1]=r,h[e+2]=_}}function H(i){for(let n=2;n<l;n++){const s=n*c,e=n*3;t[s]>99998||(t[s+3]+=h[e]*i,t[s+4]+=h[e+1]*i,t[s+5]+=h[e+2]*i,t[s]+=t[s+3]*i,t[s+1]+=t[s+4]*i,t[s+2]+=t[s+5]*i)}}let T;function O(){T&&clearInterval(T),T=setInterval(()=>{const i=performance.now();if(l>2){const s=.016666666666666666;E==="simple"?L():N(s,E==="extreme"),H(s)}const n=performance.now()-i;self.postMessage({type:"physics_update",physicsStepTime:n,consumedParticles:P,data:t.buffer})},1e3/60)}self.onmessage=i=>{const{type:n,...s}=i.data;if(n==="init"){w=s.maxParticles,g=s.blackHoleMass;const e=new ArrayBuffer(w*c*Float32Array.BYTES_PER_ELEMENT);t=new Float32Array(e),h=new Float32Array(w*3),x=new Float32Array(w),x[0]=g,x[1]=k,l=2,O()}else if(n==="set_particles"){const e=Math.min(w-2,s.count),f=l;if(l=e+2,l>f)for(let p=f;p<l;p++){const r=p*c,_=2e3+Math.random()*8e3,u=2*Math.PI*Math.random(),d=Math.acos(2*Math.random()-1)-Math.PI/2,M=_*Math.cos(u)*Math.cos(d),o=_*Math.sin(d)*.5,y=_*Math.sin(u)*Math.cos(d);t[r]=M,t[r+1]=o,t[r+2]=y;const S=Math.sqrt(v*g/_)*(.8+Math.random()*.2),a=new Float32Array([-y,0,M]),m=Math.sqrt(a[0]*a[0]+a[2]*a[2]);m>1e-9&&(a[0]/=m,a[2]/=m),t[r+3]=a[0]*S,t[r+4]=(Math.random()-.5)*20,t[r+5]=a[2]*S,x[p]=1+Math.random()*5}}else if(n==="set_mass")g=s.mass,x&&(x[0]=g);else if(n==="set_quality")E=s.quality;else if(n==="reset")l=2,P=0;else if(n==="update_moon"){if(!t)return;t[c]=s.x,t[c+1]=s.y,t[c+2]=s.z}}})();
