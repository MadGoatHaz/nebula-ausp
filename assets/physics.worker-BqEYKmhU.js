(function(){"use strict";console.log("[physics.worker] Script loaded and executing.");let t,h,g,I=0,r=0;const c=6;let v=6.674,S=4e5,E="simple",P=0;const L=5e4,R=25;function B(a){for(let s=2;s<r;s++){const e=s*3,o=s*c,f=t[o];if(f>99998)continue;const _=t[o+1],l=t[o+2],p=-f,m=-_,u=-l,M=p*p+m*m+u*u;if(M<1e4){t[o]=99999,P++;continue}const n=v*S/M,d=1/Math.sqrt(M);let w=p*d*n,i=m*d*n,y=u*d*n;const k=t[c],q=t[c+1],b=t[c+2],x=k-f,z=q-_,T=b-l,F=x*x+z*z+T*T;if(F>100){const C=v*L/F,D=1/Math.sqrt(F);w+=x*D*C,i+=z*D*C,y+=T*D*C}h[e]=w,h[e+1]=i,h[e+2]=y}}function N(a,s){for(let e=2;e<r;e++){const o=e*3,f=e*c;let _=0,l=0,p=0;const m=t[f];if(m>99998)continue;const u=t[f+1],M=t[f+2];for(let n=0;n<r;n++){if(e===n)continue;const d=t[n*c];if(d>99998)continue;const w=t[n*c+1],i=t[n*c+2],y=d-m,k=w-u,q=i-M;let b=y*y+k*k+q*q;if(s&&e>1&&n>1&&b<R){t[n*c]=99999,P++;continue}if(b<400){n===0&&(t[f]=99999,P++);continue}const x=v*g[n]/b,z=1/Math.sqrt(b);_+=y*z*x,l+=k*z*x,p+=q*z*x}h[o]=_,h[o+1]=l,h[o+2]=p}}function H(a){for(let s=2;s<r;s++){const e=s*c,o=s*3;t[e]>99998||(t[e+3]+=h[o]*a,t[e+4]+=h[o+1]*a,t[e+5]+=h[o+2]*a,t[e]+=t[e+3]*a,t[e+1]+=t[e+4]*a,t[e+2]+=t[e+5]*a)}}let A;function O(){console.log("[physics.worker] startPhysicsLoop() called."),A&&clearInterval(A),A=setInterval(()=>{try{const a=performance.now();if(r>2){const e=.016666666666666666;E==="simple"?B(e):N(e,E==="extreme"),H(e)}const s=performance.now()-a;self.postMessage({type:"physics_update",particleCount:r,physicsStepTime:s,consumedParticles:P,data:t.buffer})}catch(a){self.postMessage({type:"worker_error",error:{message:a.message,stack:a.stack}}),clearInterval(A)}},1e3/60)}self.onmessage=a=>{const{type:s,...e}=a.data;if(console.log(`[physics.worker] onmessage received: ${s}`),s==="init"){console.log("[physics.worker] Initializing..."),I=e.maxParticles,S=e.blackHoleMass;const o=new ArrayBuffer(I*c*Float32Array.BYTES_PER_ELEMENT);t=new Float32Array(o),h=new Float32Array(I*3),g=new Float32Array(I),g[0]=S,g[1]=L,r=2,console.log("[physics.worker] Initialization complete. Starting physics loop."),self.postMessage({type:"initialized",buffer:t.buffer}),O()}else if(s==="set_particles"){const o=Math.min(I-2,e.count),f=r;if(r=o+2,r>f)for(let _=f;_<r;_++){const l=_*c,p=2e3+Math.random()*8e3,m=2*Math.PI*Math.random(),u=Math.acos(2*Math.random()-1)-Math.PI/2,M=p*Math.cos(m)*Math.cos(u),n=p*Math.sin(u)*.5,d=p*Math.sin(m)*Math.cos(u);t[l]=M,t[l+1]=n,t[l+2]=d;const w=Math.sqrt(v*S/p)*(.8+Math.random()*.2),i=new Float32Array([-d,0,M]),y=Math.sqrt(i[0]*i[0]+i[2]*i[2]);y>1e-9&&(i[0]/=y,i[2]/=y),t[l+3]=i[0]*w,t[l+4]=(Math.random()-.5)*20,t[l+5]=i[2]*w,g[_]=1+Math.random()*5}}else if(s==="set_mass")S=e.mass,g&&(g[0]=S);else if(s==="set_quality")E=e.quality;else if(s==="reset")r=2,P=0;else if(s==="update_moon"){if(!t)return;t[c]=e.x,t[c+1]=e.y,t[c+2]=e.z}}})();
