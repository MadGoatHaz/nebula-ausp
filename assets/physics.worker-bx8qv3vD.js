(function(){"use strict";console.log("[physics.worker] Script loaded and executing.");let t,u,x,P=0,p=0;const c=6;let q=6.674,w=4e5,E="simple",b=0;const R=5e4,B=25;function L(f){for(let e=2;e<p;e++){const s=e*3,o=e*c,i=t[o];if(i>99998)continue;const r=t[o+1],l=t[o+2],h=-i,m=-r,_=-l,d=h*h+m*m+_*_;if(d<1e4){t[o]=99999,b++;continue}const n=q*w/d,a=1/Math.sqrt(d);let y=h*a*n,M=m*a*n,g=_*a*n;const A=t[c],v=t[c+1],I=t[c+2],z=A-i,S=v-r,F=I-l,T=z*z+S*S+F*F;if(T>100){const C=q*R/T,D=1/Math.sqrt(T);y+=z*D*C,M+=S*D*C,g+=F*D*C}u[s]=y,u[s+1]=M,u[s+2]=g}}function N(f,e){for(let s=2;s<p;s++){const o=s*3,i=s*c;let r=0,l=0,h=0;const m=t[i];if(m>99998)continue;const _=t[i+1],d=t[i+2];for(let n=0;n<p;n++){if(s===n)continue;const a=t[n*c];if(a>99998)continue;const y=t[n*c+1],M=t[n*c+2],g=a-m,A=y-_,v=M-d;let I=g*g+A*A+v*v;if(e&&s>1&&n>1&&I<B){t[n*c]=99999,b++;continue}if(I<400){n===0&&(t[i]=99999,b++);continue}const z=q*x[n]/I,S=1/Math.sqrt(I);r+=g*S*z,l+=A*S*z,h+=v*S*z}u[o]=r,u[o+1]=l,u[o+2]=h}}function H(f){for(let e=2;e<p;e++){const s=e*c,o=e*3;t[s]>99998||(t[s+3]+=u[o]*f,t[s+4]+=u[o+1]*f,t[s+5]+=u[o+2]*f,t[s]+=t[s+3]*f,t[s+1]+=t[s+4]*f,t[s+2]+=t[s+5]*f)}}let k;function O(){k&&clearInterval(k);const f=1/60;k=setInterval(()=>{try{const e=performance.now();p>2&&(E==="simple"?L(f):N(f,E==="extreme"),H(f));const s=performance.now()-e;self.postMessage({type:"physics_update",particleCount:p,physicsStepTime:s,consumedParticles:b})}catch(e){self.postMessage({type:"worker_error",error:{message:e.message,stack:e.stack}}),clearInterval(k)}},1e3/60)}self.onmessage=f=>{const{type:e,...s}=f.data;if(e==="init"){console.log("[physics.worker] Initializing..."),P=s.maxParticles,w=s.blackHoleMass;const o=new SharedArrayBuffer(P*c*Float32Array.BYTES_PER_ELEMENT);t=new Float32Array(o),u=new Float32Array(P*3),x=new Float32Array(P),x[0]=w,x[1]=R,p=2,console.log("[physics.worker] Initialization complete. Starting physics loop."),self.postMessage({type:"initialized",buffer:o},[o]),O()}else if(e==="set_particles"){const o=p;if(p=Math.min(P,s.count),p>o)for(let r=o;r<p;r++){const l=r*c,h=2e3+Math.random()*8e3,m=2*Math.PI*Math.random(),_=Math.acos(2*Math.random()-1)-Math.PI/2,d=h*Math.cos(m)*Math.cos(_),n=h*Math.sin(_)*.5,a=h*Math.sin(m)*Math.cos(_);t[l]=d,t[l+1]=n,t[l+2]=a;const y=Math.sqrt(q*w/h)*(.8+Math.random()*.2),M=new Float32Array([-a,0,d]),g=Math.sqrt(M[0]*M[0]+M[2]*M[2]);g>1e-9&&(M[0]/=g,M[2]/=g),t[l+3]=M[0]*y,t[l+4]=(Math.random()-.5)*20,t[l+5]=M[2]*y,x[r]=1+Math.random()*5}}else if(e==="set_mass")w=s.mass,x&&(x[0]=w);else if(e==="set_quality")E=s.quality;else if(e==="reset"){b=0;for(let o=2;o<p;o++){const i=o*c,r=2e3+Math.random()*8e3,l=2*Math.PI*Math.random(),h=Math.acos(2*Math.random()-1)-Math.PI/2,m=r*Math.cos(l)*Math.cos(h),_=r*Math.sin(h)*.5,d=r*Math.sin(l)*Math.cos(h);t[i]=m,t[i+1]=_,t[i+2]=d;const n=Math.sqrt(q*w/r)*(.8+Math.random()*.2),a=new Float32Array([-d,0,m]),y=Math.sqrt(a[0]*a[0]+a[2]*a[2]);y>1e-9&&(a[0]/=y,a[2]/=y),t[i+3]=a[0]*n,t[i+4]=(Math.random()-.5)*20,t[i+5]=a[2]*n,x[o]=1+Math.random()*5}}else if(e==="update_moon"){if(!t)return;t[c]=s.x,t[c+1]=s.y,t[c+2]=s.z}}})();
