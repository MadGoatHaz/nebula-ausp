(function(){"use strict";console.log("[physics.worker] Script loaded and executing.");let t,h,g,P=0,l=0;const c=6;let v=6.674,z=4e5,E="simple",b=0;const L=5e4,R=25;function B(a){for(let e=2;e<l;e++){const s=e*3,o=e*c,f=t[o];if(f>99998)continue;const _=t[o+1],r=t[o+2],p=-f,m=-_,d=-r,M=p*p+m*m+d*d;if(M<1e4){t[o]=99999,b++;continue}const n=v*z/M,u=1/Math.sqrt(M);let w=p*u*n,i=m*u*n,y=d*u*n;const k=t[c],q=t[c+1],I=t[c+2],x=k-f,S=q-_,T=I-r,F=x*x+S*S+T*T;if(F>100){const D=v*L/F,C=1/Math.sqrt(F);w+=x*C*D,i+=S*C*D,y+=T*C*D}h[s]=w,h[s+1]=i,h[s+2]=y}}function N(a,e){for(let s=2;s<l;s++){const o=s*3,f=s*c;let _=0,r=0,p=0;const m=t[f];if(m>99998)continue;const d=t[f+1],M=t[f+2];for(let n=0;n<l;n++){if(s===n)continue;const u=t[n*c];if(u>99998)continue;const w=t[n*c+1],i=t[n*c+2],y=u-m,k=w-d,q=i-M;let I=y*y+k*k+q*q;if(e&&s>1&&n>1&&I<R){t[n*c]=99999,b++;continue}if(I<400){n===0&&(t[f]=99999,b++);continue}const x=v*g[n]/I,S=1/Math.sqrt(I);_+=y*S*x,r+=k*S*x,p+=q*S*x}h[o]=_,h[o+1]=r,h[o+2]=p}}function H(a){for(let e=2;e<l;e++){const s=e*c,o=e*3;t[s]>99998||(t[s+3]+=h[o]*a,t[s+4]+=h[o+1]*a,t[s+5]+=h[o+2]*a,t[s]+=t[s+3]*a,t[s+1]+=t[s+4]*a,t[s+2]+=t[s+5]*a)}}let A;function O(){console.log("[physics.worker] startPhysicsLoop() called."),A&&clearInterval(A),A=setInterval(()=>{try{const a=performance.now();if(l>2){const s=.016666666666666666;E==="simple"?B(s):N(s,E==="extreme"),H(s)}const e=performance.now()-a;self.postMessage({type:"physics_update",physicsStepTime:e,consumedParticles:b,data:t.buffer})}catch(a){self.postMessage({type:"worker_error",error:{message:a.message,stack:a.stack}}),clearInterval(A)}},1e3/60)}self.onmessage=a=>{const{type:e,...s}=a.data;if(console.log(`[physics.worker] onmessage received: ${e}`),e==="init"){console.log("[physics.worker] Initializing..."),P=s.maxParticles,z=s.blackHoleMass;const o=new ArrayBuffer(P*c*Float32Array.BYTES_PER_ELEMENT);t=new Float32Array(o),h=new Float32Array(P*3),g=new Float32Array(P),g[0]=z,g[1]=L,l=2,console.log("[physics.worker] Initialization complete. Starting physics loop."),O()}else if(e==="set_particles"){const o=Math.min(P-2,s.count),f=l;if(l=o+2,l>f)for(let _=f;_<l;_++){const r=_*c,p=2e3+Math.random()*8e3,m=2*Math.PI*Math.random(),d=Math.acos(2*Math.random()-1)-Math.PI/2,M=p*Math.cos(m)*Math.cos(d),n=p*Math.sin(d)*.5,u=p*Math.sin(m)*Math.cos(d);t[r]=M,t[r+1]=n,t[r+2]=u;const w=Math.sqrt(v*z/p)*(.8+Math.random()*.2),i=new Float32Array([-u,0,M]),y=Math.sqrt(i[0]*i[0]+i[2]*i[2]);y>1e-9&&(i[0]/=y,i[2]/=y),t[r+3]=i[0]*w,t[r+4]=(Math.random()-.5)*20,t[r+5]=i[2]*w,g[_]=1+Math.random()*5}}else if(e==="set_mass")z=s.mass,g&&(g[0]=z);else if(e==="set_quality")E=s.quality;else if(e==="reset")l=2,b=0;else if(e==="update_moon"){if(!t)return;t[c]=s.x,t[c+1]=s.y,t[c+2]=s.z}}})();
