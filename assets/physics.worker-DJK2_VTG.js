(function(){"use strict";console.log("[physics.worker] Script loaded and executing.");let t,u,z,A=0,d=0;const a=6;let k=6.674,S=4e5,F="simple",E=0;const R=5e4,T=25;function B(l){for(let o=2;o<d;o++){const e=o*3,n=o*a,c=t[n];if(c>99998)continue;const h=t[n+1],_=t[n+2],r=-c,f=-h,M=-_,p=r*r+f*f+M*M;if(p<1e4){t[n]=99999,E++;continue}const s=k*S/p,m=1/Math.sqrt(p);let b=r*m*s,x=f*m*s,i=M*m*s;const y=t[a],P=t[a+1],q=t[a+2],w=y-c,g=P-h,v=q-_,C=w*w+g*g+v*v;if(C>100){const D=k*R/C,I=1/Math.sqrt(C);b+=w*I*D,x+=g*I*D,i+=v*I*D}u[e]=b,u[e+1]=x,u[e+2]=i}}function N(l,o){for(let e=2;e<d;e++){const n=e*3,c=e*a;let h=0,_=0,r=0;const f=t[c];if(f>99998)continue;const M=t[c+1],p=t[c+2];for(let s=0;s<d;s++){if(e===s)continue;const m=t[s*a];if(m>99998)continue;const b=t[s*a+1],x=t[s*a+2],i=m-f,y=b-M,P=x-p;let q=i*i+y*y+P*P;if(o&&e>1&&s>1&&q<T){t[s*a]=99999,E++;continue}if(q<400){s===0&&(t[c]=99999,E++);continue}const w=k*z[s]/q,g=1/Math.sqrt(q);h+=i*g*w,_+=y*g*w,r+=P*g*w}u[n]=h,u[n+1]=_,u[n+2]=r}}function H(l){for(let o=2;o<d;o++){const e=o*a,n=o*3;t[e]>99998||(t[e+3]+=u[n]*l,t[e+4]+=u[n+1]*l,t[e+5]+=u[n+2]*l,t[e]+=t[e+3]*l,t[e+1]+=t[e+4]*l,t[e+2]+=t[e+5]*l)}}self.onmessage=l=>{const{type:o,...e}=l.data;if(o==="init"){A=e.maxParticles,S=e.blackHoleMass;const c=new ArrayBuffer(A*a*Float32Array.BYTES_PER_ELEMENT);t=new Float32Array(c),u=new Float32Array(A*3),z=new Float32Array(A),z[0]=S,z[1]=R,d=2,self.postMessage({type:"initialized",buffer:c},[c]);return}if(l.data.buffer)t=new Float32Array(l.data.buffer);else{console.warn(`[physics.worker] Received message type '${o}' without a buffer.`);return}switch(o){case"set_particles":const c=d,h=Math.min(A,e.count);if(d=h,h>c)for(let _=c;_<h;_++){const r=_*a,f=2e3+Math.random()*8e3,M=2*Math.PI*Math.random(),p=Math.acos(2*Math.random()-1)-Math.PI/2,s=f*Math.cos(M)*Math.cos(p),m=f*Math.sin(p)*.5,b=f*Math.sin(M)*Math.cos(p);t[r]=s,t[r+1]=m,t[r+2]=b;const x=Math.sqrt(k*S/f)*(.8+Math.random()*.2),i=new Float32Array([-b,0,s]),y=Math.sqrt(i[0]*i[0]+i[2]*i[2]);y>1e-9&&(i[0]/=y,i[2]/=y),t[r+3]=i[0]*x,t[r+4]=(Math.random()-.5)*20,t[r+5]=i[2]*x,z[_]=1+Math.random()*5}break;case"set_mass":S=e.mass,z[0]=S;break;case"set_quality":F=e.quality;break;case"update_moon":t[a]=e.x,t[a+1]=e.y,t[a+2]=e.z;break}const n=1/60;d>2&&(F==="simple"?B():N(n,F==="extreme"),H(n)),self.postMessage({type:"physics_update",buffer:t.buffer,particleCount:d,consumedParticles:E},[t.buffer])}})();
